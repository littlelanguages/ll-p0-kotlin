tokens
    Const = "const";
    Else = "else";
    False = "false";
    Fun = "fun";
    If = "if";
    Let = "let";
    Return = "return";
    True = "true";
    While = "while";

    Bool = "Bool";
    Float = "Float";
    Int = "Int";

    AmpersandAmpersand = "&&";
    Bang = "!";
    BangEqual = "!=";
    BarBar = "||";
    Colon = ":";
    Comma = ",";
    Equal = "=";
    EqualEqual = "==";
    GreaterEqual = ">=";
    GreaterThan = ">";
    LCurly = "{";
    LessEqual = "<=";
    LessThan = "<";
    LParen = "(";
    Minus = "-";
    Plus = "+";
    Question = "?";
    RCurly = "}";
    RParen = ")";
    Semicolon = ";";
    Slash = "/";
    Star = "*";

    Identifier = alpha {digit | alpha};
    LiteralInt = digits;
    LiteralFloat =
      (digits "." digits [("e" | "E") ["+" | "-"] digits]) |
      (digits ("e" | "E") ["+" | "-"] digits) |
      ("." digits [("e" | "E") ["+" | "-"] digits]);
    LiteralString = '"' {!('"' + cr) | "\" '"'}  '"';

comments
   "/*" to "*/" nested;
   "//" {!cr};

whitespace
  chr(0)-' ';

fragments
  digit = '0'-'9';
  digits = digit {digit};
  alpha = 'a'-'z' + 'A'-'Z';
  cr = chr(10);